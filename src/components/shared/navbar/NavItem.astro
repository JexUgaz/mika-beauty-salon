---
import type { NavbarItem } from "@/types/NavbarItem";
import NavChildren from "./NavChildren.astro";
import ArrowDownIcon from "@/components/icons/ArrowDownIcon.astro";

interface Props {
  item: NavbarItem;
  isActive: boolean;
  currentPath: string;
}

const { item, isActive, currentPath } = Astro.props;

const baseClass = "font-title relative transition-all duration-300 ml-5";
const hasChildren = !!item.children;

const hoverLineClass = `after:absolute after:left-0 after:h-[2px] after:bg-mika-primary after:transition-all after:duration-[400ms] after:bottom-0
  ${isActive ? "font-bold after:w-full" : "after:w-0 hover:after:w-full hover:animate-hover-scale font-semibold"}`;
---

<li class="relative group" onclick="this.classList.toggle('open')">
  <a
    href={hasChildren ? "#" : item.href}
    class={`${baseClass} inline-flex items-center ${isActive ? "text-mika-primary" : "hover:text-mika-primary"} ${hoverLineClass}`}
  >
    {item.name.toLocaleUpperCase()}
    {
      hasChildren && (
        <ArrowDownIcon class="transition-transform duration-300 group-hover:-rotate-90 group-[.open]:-rotate-90 size-5 ms-2" />
      )
    }
  </a>
  <div class="absolute left-0 top-full h-6 w-full group-hover:block"></div>
  {
    hasChildren && (
      <NavChildren children={item.children!} currentPath={currentPath} />
    )
  }
</li>
